<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="IIS Express">RDF.Arcana.API/RDF.Arcana.API.csproj</projectFile>
    <projectFile profileName="http">RDF.Arcana.API/RDF.Arcana.API.csproj</projectFile>
    <projectFile profileName="https">RDF.Arcana.API/RDF.Arcana.API.csproj</projectFile>
    <projectFile pubXmlPath="RDF.Arcana.API/Properties/PublishProfiles/FolderProfile.pubxml">RDF.Arcana.API/RDF.Arcana.API.csproj</projectFile>
    <projectFile pubXmlPath="RDF.Arcana.API/Properties/PublishProfiles/IIS.pubxml">RDF.Arcana.API/RDF.Arcana.API.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="14d24d4b-614d-4a1c-b710-001ebffff5a5" name="Changes" comment="Add Id property to GetRequestedFreebiesQueryResult&#10;&#10;In this commit, we added an Id property to GetRequestedFreebiesQueryResult and made necessary changes in FreebiesMappingExtension. Also, updated the ApproveFreebieRequest method to take ApproveFreebiesCommand from request body. This change streamlines the code and makes it more efficient by eliminating the need to create a new ApproveFreebiesCommand instance within the method every time it's called." />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <excluded-from-favorite>
      <branch-storage>
        <map>
          <entry type="REMOTE">
            <value>
              <list>
                <branch-info repo="$PROJECT_DIR$" source="origin/master" />
              </list>
            </value>
          </entry>
        </map>
      </branch-storage>
    </excluded-from-favorite>
    <favorite-branches>
      <branch-storage>
        <map>
          <entry type="REMOTE">
            <value>
              <list>
                <branch-info repo="$PROJECT_DIR$" source="aldrin/master" />
              </list>
            </value>
          </entry>
        </map>
      </branch-storage>
    </favorite-branches>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/dd85d1af76a544e1a8083607f687e374b1d8a0/_5a3bc/IIdentity.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://D:/Arcana/RDF.Arcana.API/Data/DataContext.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://D:/Arcana/RDF.Arcana.API/Domain/ApprovedFreebies.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://D:/Arcana/RDF.Arcana.API/Features/Freebies/ApproveFreebies.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://D:/Arcana/RDF.Arcana.API/Features/Freebies/ApproveFreebies.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://D:/Arcana/RDF.Arcana.API/Features/Freebies/ApproveFreebies.cs" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2TNBXYwpMdvSwqV2OxamdrX9M4g" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;rider.external.source.directories&quot;: [
      &quot;C:\\Users\\avega\\AppData\\Roaming\\JetBrains\\Rider2023.2\\resharper-host\\DecompilerCache&quot;,
      &quot;C:\\Users\\avega\\AppData\\Roaming\\JetBrains\\Rider2023.2\\resharper-host\\SourcesCache&quot;,
      &quot;C:\\Users\\avega\\AppData\\Local\\Symbols\\src&quot;
    ]
  }
}</component>
  <component name="RunManager" selected=".NET Launch Settings Profile.RDF.Arcana.API: http">
    <configuration name="RDF.Arcana.API: FolderProfile" type="DotNetMsBuildPublish" factoryName="Publish to IIS">
      <riderPublish configuration="Release" platform="Any CPU" publish_profile="FolderProfile.pubxml" pubxml_path="$PROJECT_DIR$/RDF.Arcana.API/Properties/PublishProfiles/FolderProfile.pubxml" uuid_high="6058290284386075175" uuid_low="-5332320375588500453" />
      <method v="2" />
    </configuration>
    <configuration name="RDF.Arcana.API: IIS" type="DotNetMsBuildPublish" factoryName="Publish to IIS">
      <riderPublish publish_profile="IIS.pubxml" pubxml_path="$PROJECT_DIR$/RDF.Arcana.API/Properties/PublishProfiles/IIS.pubxml" uuid_high="6058290284386075175" uuid_low="-5332320375588500453" />
      <method v="2" />
    </configuration>
    <configuration name="RDF.Arcana.API: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/RDF.Arcana.API/RDF.Arcana.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="RDF.Arcana.API: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/RDF.Arcana.API/RDF.Arcana.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="RDF.Arcana.API: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/RDF.Arcana.API/RDF.Arcana.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="14d24d4b-614d-4a1c-b710-001ebffff5a5" name="Changes" comment="" />
      <created>1690873698135</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1690873698135</updated>
      <workItem from="1690873699229" duration="6140000" />
      <workItem from="1690889962978" duration="3141000" />
      <workItem from="1690935073939" duration="17555000" />
      <workItem from="1690957956194" duration="5453000" />
      <workItem from="1691021612449" duration="28651000" />
      <workItem from="1691105561860" duration="15282000" />
      <workItem from="1691213728220" duration="7036000" />
    </task>
    <task id="LOCAL-00001" summary="Remove redundant and outdated files and refactor database.&#10;&#10;Deleted unnecessary .idea and .gitignore files, which were IDE-specific and not needed in the repository. Removed outdated user specific features and files which were causing code redundancy and maintenance problems. Updated migrations to reflect structural changes and refactor database relations and constraints due to modifications. These changes simplify the application structure to be more maintainable and aligned with the business logic.">
      <option name="closed" value="true" />
      <created>1690875583373</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1690875583373</updated>
    </task>
    <task id="LOCAL-00002" summary="Refactor API methods and remove unused imports&#10;&#10;This commit entails several changes across multiple files for better code readability and performance. The 'Update' method in 'UpdateProductCategory.cs' has been refactored to fetch the product category ID from the route rather than the body. This makes the method usage more RESTful. The 'NotificationServices' method in 'NotificationService.cs' has been updated to instantiate the 'NotificationServiceQuery' object within the method itself, hence reducing the dependencies. Redundant using directive in 'UpdateRejectProspectStatus.cs' has been removed, and a newline was added at the end of 'NoClientFoundException.cs' for POSIX compliance.">
      <option name="closed" value="true" />
      <created>1690891019195</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1690891019195</updated>
    </task>
    <task id="LOCAL-00003" summary="&quot;Refactor prospecting feature files and update methods&#10;&#10;This commit relocates prospecting related files and organizes them into Request, Approved, and Rejected directories for better organization and maintainability. It also changes a method in UpdateMeatTypeStatus.cs from HTTP PUT to HTTP PATCH to align with REST principles. A new file, GetRequestedProspectById.cs, has been added to handle specific requests.">
      <option name="closed" value="true" />
      <created>1690938436749</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1690938436749</updated>
    </task>
    <task id="LOCAL-00004" summary="Change ProductCategoryId to ProductSubCategoryId in AddNewItems&#10;&#10;Refactored the 'AddNewItems' class to replace 'ProductCategoryId' with 'ProductSubCategoryId' in response to a change in categorization logic. Instead of assigning items to a product category, they will now belong to a more specific sub-category, enhancing product management and filtering.">
      <option name="closed" value="true" />
      <created>1690941011680</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1690941011680</updated>
    </task>
    <task id="LOCAL-00005" summary="&quot;Fixed incorrect query for ProductSubCategory in AddNewItems&#10;&#10;The query to validate the subcategory of the product was mistakenly using 'ProductCategoryId'. The correct field to use is 'ProductSubCategoryId'. This change ensures that the correct subcategory is validated before adding a new item.&quot;">
      <option name="closed" value="true" />
      <created>1690941037035</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1690941037035</updated>
    </task>
    <task id="LOCAL-00006" summary="Add Id field to UpdateItemCommand class&#10;&#10;Added an Id property to the UpdateItemCommand class. Replaced the retrieval and validation of items with the Id property instead of ItemCode. The change was made because using an Id is a more reliable way to specifically identify items in the database. The item retrieval and validation have been updated accordingly, plus the Update method now accepts the Id as parameter for more accurate data handling.">
      <option name="closed" value="true" />
      <created>1690944457186</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1690944457186</updated>
    </task>
    <task id="LOCAL-00007" summary="Update item identification from string to int&#10;&#10;Changed the ItemCode in UpdateItemStatusCommand and its related codes from string to int. This change is implemented to make the item identification more consistent and efficient across the application. Also, integer IDs are easier to manage and manipulate.">
      <option name="closed" value="true" />
      <created>1690945160184</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1690945160184</updated>
    </task>
    <task id="LOCAL-00008" summary="Add functionality to request freebies by approved clients&#10;&#10;A new feature has been added. This new functionality allows approved clients to request freebies. This involves changes in multiple files involving domain, status, data context, RequestFreebies, ApprovedClient, and User files. This change was necessary to extend the shopping facility to reward dedicated customers with freebies based on their engagement in order to improve customer retention and increase repeat purchases. As a result, a new model 'Freebies' has been introduced with relationships to multiple existing entities in the system such firebase status, user, items, and approved clients. Furthermore, extra caution has been implemented to avoid allowing rejected clients from requesting freebies. New exceptions have been readied to handle such failures. Such changes provide a comprehensive and safe update to the system as well as the database schema via migrations.">
      <option name="closed" value="true" />
      <created>1690958403024</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1690958403024</updated>
    </task>
    <task id="LOCAL-00009" summary="Set default value for CreatedAt, fix id parameter, enhance RequestFreebies&#10;&#10;Set default value for CreatedAt field in Freebies model to prevent missing date records on creation. Changed &quot;FromQuery&quot; to &quot;FromRoute&quot; in UpdateTermDaysStatus method to correctly get id from the URI. Enhanced RequestFreebies method by adding &quot;AddedBy&quot; field to capture who requested the freebies and changed route method to HTTP POST, additionally, error handling was added to ensure better responses.">
      <option name="closed" value="true" />
      <created>1690960258746</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1690960258746</updated>
    </task>
    <task id="LOCAL-00010" summary="Remove initial migration files&#10;&#10;Deleted the initial migration files 20230731024132_InitialCreate.cs and 20230731083505_AddClientRelatedEntity.cs. The removal was necessary as the initial schema migration was redundant and causing issues with database creation on new environments. The database schema will be managed through successive migrations.">
      <option name="closed" value="true" />
      <created>1691057330308</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1691057330308</updated>
    </task>
    <task id="LOCAL-00011" summary="Refactor queries and add Freebie approval feature&#10;&#10;Removed unnecessary using statements in NotificationService.cs and refactored GetAllRequestedProspectAsync.cs to better reflect the active status of requested prospects, improving code readability. New file ApproveFreebies.cs introduced a method to approve freebie requests improving functionality in the Freebies feature.">
      <option name="closed" value="true" />
      <created>1691206743696</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1691206743696</updated>
    </task>
    <task id="LOCAL-00012" summary="&quot;Add IsActive status and new models to Client Prospecting Feature&quot;&#10;&#10;In the ProspectingMappingProfiles, GetAllRequestedProspectAsync, GetRequestedProspectById, GetAllRejectProspectAsync, GetAllApprovedProspectAsync, and GetRequestedProspectById sections, IsActive entry was added for better client activity monitoring. The status of the clients whether they are active or not, is now part of our detailed mapping.&#10;&#10;In the DataContext, new entities of approved and rejected freebies were also introduced. These modifications are needed to handle the expanded business logic related to the management of freebies which comes with an approval or rejection process. &#10;&#10;The IsActive field and mentioned models implemented provide more efficient data extraction and improve the efficiency of the response, considering the application's evolving needs and demand.">
      <option name="closed" value="true" />
      <created>1691218405730</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1691218405730</updated>
    </task>
    <task id="LOCAL-00013" summary="Add RejectedFreebies, ApprovedFreebies, update ApproveFreebies flow&#10;&#10;Created new domain classes 'RejectedFreebies' and 'ApprovedFreebies' to manage freebies that are approved or rejected. Updated the 'ApproveFreebies' flow to use these new classes and include the feature of attaching photo proof for approved freebies. This helps structure the data more efficiently and enhances the approval process by adding an extra layer of verification with photo proof.">
      <option name="closed" value="true" />
      <created>1691218628999</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1691218628999</updated>
    </task>
    <task id="LOCAL-00014" summary="Update data storage strategy and fix typos in API routes&#10;&#10;Updated storage method for photo evidence from directly saving as binary to storing file path in `ApprovedFreebies.cs` to optimize database storage. Fixed incorrect API routes from `api/Propspecting` to `api/Prospecting` in `UpdateRejectProspectStatus.cs`, `GetRequestedProspectById.cs`, `UpdateApprovedProspectStatus.cs`, and `UpdateRequestProspectStatus.cs` files for accurate mapping. Tweaked search logic in `GetAllRequestedProspectAsync.cs` to improve search result relevance. Also, commented out code in `ApproveFreebies.cs` indicating a work-in-progress state.">
      <option name="closed" value="true" />
      <created>1691219741102</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1691219741102</updated>
    </task>
    <task id="LOCAL-00015" summary="&quot;Refactor client status update and enable Freebies approval feature&quot;&#10;&#10;This commit includes changes across the client prospecting API, specifically updating the logic that checks the current status of a client and initiates the status change. The 'IsActive' check has been removed to streamline the update process. This allows for more flexibility when changing the status of a client.&#10;&#10;Additionally, in the Freebies feature, un-commented the code which had been previously suppressed, making the 'ApproveFreebies' feature available. It now supports image uploads and handles file-saving, providing a more robust solution for approving freebies. &#10;&#10;Both these changes are aimed at improving usability and simplifying the codebase.">
      <option name="closed" value="true" />
      <created>1691220102138</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1691220102138</updated>
    </task>
    <task id="LOCAL-00016" summary="Add Id property to GetRequestedFreebiesQueryResult&#10;&#10;In this commit, we added an Id property to GetRequestedFreebiesQueryResult and made necessary changes in FreebiesMappingExtension. Also, updated the ApproveFreebieRequest method to take ApproveFreebiesCommand from request body. This change streamlines the code and makes it more efficient by eliminating the need to create a new ApproveFreebiesCommand instance within the method every time it's called.">
      <option name="closed" value="true" />
      <created>1691221350474</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1691221350474</updated>
    </task>
    <option name="localTasksCounter" value="17" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="master" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="Remove redundant and outdated files and refactor database.&#10;&#10;Deleted unnecessary .idea and .gitignore files, which were IDE-specific and not needed in the repository. Removed outdated user specific features and files which were causing code redundancy and maintenance problems. Updated migrations to reflect structural changes and refactor database relations and constraints due to modifications. These changes simplify the application structure to be more maintainable and aligned with the business logic." />
    <MESSAGE value="Initial" />
    <MESSAGE value="Refactor API methods and remove unused imports&#10;&#10;This commit entails several changes across multiple files for better code readability and performance. The 'Update' method in 'UpdateProductCategory.cs' has been refactored to fetch the product category ID from the route rather than the body. This makes the method usage more RESTful. The 'NotificationServices' method in 'NotificationService.cs' has been updated to instantiate the 'NotificationServiceQuery' object within the method itself, hence reducing the dependencies. Redundant using directive in 'UpdateRejectProspectStatus.cs' has been removed, and a newline was added at the end of 'NoClientFoundException.cs' for POSIX compliance." />
    <MESSAGE value="&quot;Refactor prospecting feature files and update methods&#10;&#10;This commit relocates prospecting related files and organizes them into Request, Approved, and Rejected directories for better organization and maintainability. It also changes a method in UpdateMeatTypeStatus.cs from HTTP PUT to HTTP PATCH to align with REST principles. A new file, GetRequestedProspectById.cs, has been added to handle specific requests." />
    <MESSAGE value="Change ProductCategoryId to ProductSubCategoryId in AddNewItems&#10;&#10;Refactored the 'AddNewItems' class to replace 'ProductCategoryId' with 'ProductSubCategoryId' in response to a change in categorization logic. Instead of assigning items to a product category, they will now belong to a more specific sub-category, enhancing product management and filtering." />
    <MESSAGE value="&quot;Fixed incorrect query for ProductSubCategory in AddNewItems&#10;&#10;The query to validate the subcategory of the product was mistakenly using 'ProductCategoryId'. The correct field to use is 'ProductSubCategoryId'. This change ensures that the correct subcategory is validated before adding a new item.&quot;" />
    <MESSAGE value="Add Id field to UpdateItemCommand class&#10;&#10;Added an Id property to the UpdateItemCommand class. Replaced the retrieval and validation of items with the Id property instead of ItemCode. The change was made because using an Id is a more reliable way to specifically identify items in the database. The item retrieval and validation have been updated accordingly, plus the Update method now accepts the Id as parameter for more accurate data handling." />
    <MESSAGE value="Update item identification from string to int&#10;&#10;Changed the ItemCode in UpdateItemStatusCommand and its related codes from string to int. This change is implemented to make the item identification more consistent and efficient across the application. Also, integer IDs are easier to manage and manipulate." />
    <MESSAGE value="Add functionality to request freebies by approved clients&#10;&#10;A new feature has been added. This new functionality allows approved clients to request freebies. This involves changes in multiple files involving domain, status, data context, RequestFreebies, ApprovedClient, and User files. This change was necessary to extend the shopping facility to reward dedicated customers with freebies based on their engagement in order to improve customer retention and increase repeat purchases. As a result, a new model 'Freebies' has been introduced with relationships to multiple existing entities in the system such firebase status, user, items, and approved clients. Furthermore, extra caution has been implemented to avoid allowing rejected clients from requesting freebies. New exceptions have been readied to handle such failures. Such changes provide a comprehensive and safe update to the system as well as the database schema via migrations." />
    <MESSAGE value="Set default value for CreatedAt, fix id parameter, enhance RequestFreebies&#10;&#10;Set default value for CreatedAt field in Freebies model to prevent missing date records on creation. Changed &quot;FromQuery&quot; to &quot;FromRoute&quot; in UpdateTermDaysStatus method to correctly get id from the URI. Enhanced RequestFreebies method by adding &quot;AddedBy&quot; field to capture who requested the freebies and changed route method to HTTP POST, additionally, error handling was added to ensure better responses." />
    <MESSAGE value="Remove initial migration files&#10;&#10;Deleted the initial migration files 20230731024132_InitialCreate.cs and 20230731083505_AddClientRelatedEntity.cs. The removal was necessary as the initial schema migration was redundant and causing issues with database creation on new environments. The database schema will be managed through successive migrations." />
    <MESSAGE value="Refactor queries and add Freebie approval feature&#10;&#10;Removed unnecessary using statements in NotificationService.cs and refactored GetAllRequestedProspectAsync.cs to better reflect the active status of requested prospects, improving code readability. New file ApproveFreebies.cs introduced a method to approve freebie requests improving functionality in the Freebies feature." />
    <MESSAGE value="&quot;Add IsActive status and new models to Client Prospecting Feature&quot;&#10;&#10;In the ProspectingMappingProfiles, GetAllRequestedProspectAsync, GetRequestedProspectById, GetAllRejectProspectAsync, GetAllApprovedProspectAsync, and GetRequestedProspectById sections, IsActive entry was added for better client activity monitoring. The status of the clients whether they are active or not, is now part of our detailed mapping.&#10;&#10;In the DataContext, new entities of approved and rejected freebies were also introduced. These modifications are needed to handle the expanded business logic related to the management of freebies which comes with an approval or rejection process. &#10;&#10;The IsActive field and mentioned models implemented provide more efficient data extraction and improve the efficiency of the response, considering the application's evolving needs and demand." />
    <MESSAGE value="Add RejectedFreebies, ApprovedFreebies, update ApproveFreebies flow&#10;&#10;Created new domain classes 'RejectedFreebies' and 'ApprovedFreebies' to manage freebies that are approved or rejected. Updated the 'ApproveFreebies' flow to use these new classes and include the feature of attaching photo proof for approved freebies. This helps structure the data more efficiently and enhances the approval process by adding an extra layer of verification with photo proof." />
    <MESSAGE value="Update data storage strategy and fix typos in API routes&#10;&#10;Updated storage method for photo evidence from directly saving as binary to storing file path in `ApprovedFreebies.cs` to optimize database storage. Fixed incorrect API routes from `api/Propspecting` to `api/Prospecting` in `UpdateRejectProspectStatus.cs`, `GetRequestedProspectById.cs`, `UpdateApprovedProspectStatus.cs`, and `UpdateRequestProspectStatus.cs` files for accurate mapping. Tweaked search logic in `GetAllRequestedProspectAsync.cs` to improve search result relevance. Also, commented out code in `ApproveFreebies.cs` indicating a work-in-progress state." />
    <MESSAGE value="&quot;Refactor client status update and enable Freebies approval feature&quot;&#10;&#10;This commit includes changes across the client prospecting API, specifically updating the logic that checks the current status of a client and initiates the status change. The 'IsActive' check has been removed to streamline the update process. This allows for more flexibility when changing the status of a client.&#10;&#10;Additionally, in the Freebies feature, un-commented the code which had been previously suppressed, making the 'ApproveFreebies' feature available. It now supports image uploads and handles file-saving, providing a more robust solution for approving freebies. &#10;&#10;Both these changes are aimed at improving usability and simplifying the codebase." />
    <MESSAGE value="Add Id property to GetRequestedFreebiesQueryResult&#10;&#10;In this commit, we added an Id property to GetRequestedFreebiesQueryResult and made necessary changes in FreebiesMappingExtension. Also, updated the ApproveFreebieRequest method to take ApproveFreebiesCommand from request body. This change streamlines the code and makes it more efficient by eliminating the need to create a new ApproveFreebiesCommand instance within the method every time it's called." />
    <option name="LAST_COMMIT_MESSAGE" value="Add Id property to GetRequestedFreebiesQueryResult&#10;&#10;In this commit, we added an Id property to GetRequestedFreebiesQueryResult and made necessary changes in FreebiesMappingExtension. Also, updated the ApproveFreebieRequest method to take ApproveFreebiesCommand from request body. This change streamlines the code and makes it more efficient by eliminating the need to create a new ApproveFreebiesCommand instance within the method every time it's called." />
  </component>
</project>